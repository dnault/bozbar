buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.10.RELEASE'
    }
}

apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

repositories {
    jcenter()
}

dependencies {
    compile project(':') // Core library; a real project would use the following line instead:
    // compile "com.github.therapi:therapi-json-rpc:<version>"

    // Annotation processor, bakes Javadoc comments into the code
    // so they can be used to generate API documentation.
    compileOnly "com.github.therapi:therapi-runtime-javadoc-scribe:0.4.0"

    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")

    testCompile 'junit:junit:4.11'
    testCompile 'org.slf4j:slf4j-simple:1.7.12'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    // retain parameter names in class files
    options.compilerArgs << "-parameters"
}